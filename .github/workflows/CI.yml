# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: []

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  #
  build-documentation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Build the HTML documentation
      - name: Doxygen Action
        uses: mattnotmitt/doxygen-action@v1.3.0
      - name: GH Pages Deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html
          # Deploy the HTML documentation to GitHub Pages

  # This workflow contains a single job called "build"
  checks:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: prepare environment
        run:  sudo apt install git &&
          git submodule update --init

      - name: checks
        run:
          docker run -v `pwd`:`pwd` -w `pwd` --cap-add=SYS_PTRACE -t rusdevops/bootstrap-cpp scripts/checks.sh
  tests:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: prepare environment
        run:  sudo apt install git &&
          git submodule update --init

      - name: tests
        run:
          docker run -v `pwd`:`pwd` -w `pwd` -t rusdevops/bootstrap-cpp scripts/tests.sh


  quality:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: prepare environment
        run:  sudo apt install git &&
          git submodule update --init

      - name: quality
        run:
          docker run -v `pwd`:`pwd` -w `pwd` -t rusdevops/bootstrap-cpp scripts/coverage.sh

